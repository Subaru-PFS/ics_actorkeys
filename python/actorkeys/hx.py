KeysDictionary("hx", (2, 3),
               Key("controllers", String(help='controllers list') * (1, 2)),
               Key("text", String(), help='Stuff for humans'),
               Key('version', String(help="HX actor version",
                                     FITS=("W_RVHX",
                                           "W_HXACTOR_VERSION"))),
               Key('version_tron_actorcore', String(help="tron_actorcore version",
                                                    FITS=("W_RVACOR",
                                                          "W_ACTORCORE_VERSION"))),
               Key('version_ics_actorkeys', String(help="ics_actorkeys version",
                                                   FITS=("W_RVAKEY",
                                                         "W_ACTORKEYS_VERSION"))),
               Key('version_hxhal', String(help="hxhal version",
                                           FITS=("W_RVHXHL",
                                                 "W_HXHAL_VERSION"))),
               Key('version_pfs_instdata', String(help="pfs_instdata version",
                                                  FITS=("W_RVPFID",
                                                        "W_PFS_INSTDATA_VERSION"))),
               Key('version_ics_utils', String(help="ics_utils version",
                                               FITS=("W_RVICUT",
                                                     "W_ICS_UTILS_VERSION"))),
               Key('serial_SAM', String(help="SAM serial number",
                                        FITS=("W_SRSAM",
                                              "W_SAM_SERIAL"))),
               Key('serial_H4', String(help="H4RG serial number",
                                       FITS=("W_SRH4",
                                             "W_H4RG_SERIAL"))),
               Key('serial_ASIC', String(help="ASIC serial number",
                                         FITS=("W_SRASIC",
                                               "W_ASIC_SERIAL"))),
               Key("asicConfig",
                   String(name="ASIC_image",
                          help="name of the loaded ASIC firmware image",
                          FITS=("W_H4FIRM",
                                "W_ASIC_FIRMWARE_NAME")),
                   String(name="ASIC_config",
                          help="name of the loaded ASIC configuration",
                          FITS=("W_H4CONF",
                                "W_ASIC_CONFIGURATION_NAME"))),

               Key("irp",
                   Int(name="ratio",
                          help="number of science pixels per ref pixel Or 0",
                          FITS=("W_H4IRPN",
                                "W_IRP_RATIO")),
                   Int(name="offset",
                          help="number of science pixels before ref. pixel",
                          FITS=("W_H4IRPO",
                                "W_IRP_OFFSET"))),

               # ramp=1,1,1,3,0
               Key("ramp",
                   Int("nramp", help="number of ramps requested",
                       FITS=("W_H4NRMP",
                             "W_H4_NRAMPS")),
                   Int("ngroup", help="number of groups requested",
                       FITS=("W_H4NGRP",
                             "W_H4_NGROUPS")),
                   Int("nreset", help="number of resets requested",
                       FITS=("W_H4NRST",
                             "W_H4_NRESETS")),
                   Int("nramp", help="number of reads requested",
                       FITS=("W_H4NRED",
                             "W_H4_NREADS")),
                   Int("ndrop", help="number of drops requested",
                       FITS=("W_H4NDRP",
                             "W_H4_NDROPS"))),

               # readtimes=0,2022-10-07T09:02:56.845543Z,2022-10-07T09:03:07.702593Z,10.857
               Key("readTimes",
                   Int("visit", help="visit for ramp"),
                   String("reset0Time", help="start time for first reset frame"),
                   String("read0Time", help="start time for first read frame"),
                   Float("readTime", help="single read time")),

               # hxread=/data/pfsx/2020-02-13/PFJB00469913.fits,1,1,0
               Key("hxread",
                   Int(name="visit", help="iit for ramp"),
                   Int("ramp", help="the current ramp number",
                       FITS=("W_H4RAMP",
                             "W_H4_RAMP_NUMBER")),
                   Int("group", help="the current group number within the ramp",
                       FITS=("W_H4GRUP",
                             "W_H4_GROUP_NUMBER")),
                   Int("ramp", help="the current read within the ramp+group",
                       FITS=("W_H4READ",
                             "W_H4_READ_NUMBER"))),
                   
               Key("filepath",
                   String(name="rootDirectory"),
                   String(name="nightDirectory"),
                   String(name="filename"),
                   help="all the parts making up the image file path. Suitable for os.path.join()"),

               Key("filename",
                   String(name="filename")),

               Key("spsFileIds",
                   String(name="cam", help="the camera name (e.g. b3)"),
                   String(name="pfsDay", help="the date used for the night data (e.g. 2020-05-14)"),
                   Int(name="visit", help="the PFS visit"),
                   Int(name="spectrograph", help="the spectrograph module number"),
                   Int(name="arm", help="the arm number")),

               Key("exposureState",
                   Enum('idle','resetting','reading','aborted','unknown'),
                   help="the state of the readout system"),
)
