KeysDictionary('dcb', (2, 3),
               Key('text', String(help='text for humans')),
               Key('version', String(help='EUPS/git version')),
               Key('metaFSM',
                   Enum('OFF', 'LOADED', 'ONLINE', name='state'),
                   Enum('IDLE', 'LOADING', 'INITIALISING', 'BUSY', 'MOVING', 'WARMING', 'TURNING_OFF', 'SWITCHING',
                        'FAILED', name='substate'), help='meta state machine'),
               Key('atenFSM',
                   Enum('OFF', 'LOADED', 'ONLINE', name='state'),
                   Enum('IDLE', 'LOADING', 'INITIALISING', 'SWITCHING', 'FAILED', name='substate'),
                   help='aten state machine'),
               Key('atenMode', Enum('operation', 'simulation', help='aten mode')),
               Key('neon', Bool('off', 'on', name='state', help='neon lamp switch',
                                FITS=('W_AITNEO', 'AIT_DCB_NEON'))),
               Key('xenon', Bool('off', 'on', name='state', help='xenon lamp switch',
                                 FITS=('W_AITXEN', 'AIT_DCB_XENON'))),
               Key('hgar', Bool('off', 'on', name='state', help='Hg-Ar switch',
                                FITS=('W_AITHGA', 'AIT_DCB_HGAR'))),
               Key('krypton', Bool('off', 'on', name='state', help='Krypton switch',
                                   FITS=('W_AITKRY', 'AIT_DCB_KRYPTON'))),
               Key('deuterium', Bool('off', 'on', name='state', help='deuterium lamp switch',
                                     FITS=('W_AITDEU', 'AIT_DCB_DEUTERIUM'))),
               Key('argon', Bool('off', 'on', name='state', help='argon lamp switch',
                                 FITS=('W_AITARG', 'AIT_DCB_ARGON'))),
               Key('bakeout', Bool('off', 'on', name='state', help='bakeout cover')),
               Key('roughpump', Bool('off', 'on', name='state', help='roughpump')),
               Key('sac', Bool('off', 'on', name='state', help='sac')),
               Key('breva', Bool('off', 'on', name='state', help='breva')),
               Key('pow_mono', Bool('off', 'on', name='state', help='power monochromator')),
               Key('pow_attenuator', Bool('off', 'on', name='state', help='power attenuator switch')),
               Key('pow_sphere', Bool('off', 'on', name='state', help='power int sphere switch')),
               Key('pow_halogen', Bool('off', 'on', name='state', help='power halogen switch')),
               Key('pow_labsphere', Enum('off', 'on', 'undef', name='state', help='logical and of the 3 power supply')),
               Key('atenVAW',
                   Float(name='voltage', help='Voltage'),
                   Float(name='current', help='Current'),
                   Float(name='power', help='Power'), help='aten current Volt, Amp, Power'),

               Key('labsphereFSM',
                   Enum('OFF', 'LOADED', 'ONLINE', name='state'),
                   Enum('IDLE', 'LOADING', 'INITIALISING', 'MOVING', 'WARMING', 'FAILED', name='substate'),
                   help='labsphere state machine'),
               Key('labsphereMode', Enum('operation', 'simulation', help='labsphere mode')),
               Key('photodiode', Float(invalid='Nan', help='cd/m^2 at photodiode',
                                       FITS=('W_AITPHO', 'AIT_DCB_DIODEFLUX'))),
               Key('flux',
                   Float(invalid='Nan', name='median', help='photodiode flux median'),
                   Float(invalid='Nan', name='std', help='photodiode flux standard deviation')),
               Key('attenuator', Int(help='attenuator opening value (open=0)',
                                     FITS=('W_AITATT', 'AIT_DCB_ATTENUATOR'))),
               Key('halogen', Enum('off', 'on', 'undef', name='state',
                                   help='halogen switch',
                                   FITS=('W_AITQTH', 'AIT_DCB_HALOGEN'))),
               Key('monoFSM',
                   Enum('OFF', 'LOADED', 'ONLINE', name='state'),
                   Enum('IDLE', 'LOADING', 'INITIALISING', 'MOVING', 'OPENING', 'CLOSING', 'FAILED', name='substate'),
                   help='monochromator state machine'),
               Key('monoMode', Enum('operation', 'simulation', help='monochromator mode')),
               Key('monograting',
                   Int(help='grating Number', name='nb'),
                   Float(invalid='Nan', help='lines per mm'),
                   Float(invalid='Nan', help='')),
               Key('monochromator',
                   Enum('open', 'closed', name='shutter', help='shutter state'),
                   Int(help='outport number', name='outport'),
                   Float(invalid='Nan', name='wavelength', help='wavelength (nm)')),
               Key('monoerror', String(help='text for humans')),

               Key('monoqthFSM',
                   Enum('OFF', 'LOADED', 'ONLINE', name='state'),
                   Enum('IDLE', 'LOADING', 'INITIALISING', 'WARMING', 'TURNING_OFF', 'FAILED', name='substate'),
                   help='monoqth state machine'),
               Key('monoqthMode', Enum('operation', 'simulation', help='monoqth mode')),
               Key('monoqthVAW',
                   Float(name='voltage', help='Voltage'),
                   Float(name='current', help='Current'),
                   Float(name='power', help='Power'), help='aten current Volt, Amp, Power'),
               Key('monoqth',
                   Bool('off', 'on', name='state', help='power'),
                   UInt(name="stb", help='status byte'),
                   UInt(name="esr", help='error registry'), help='monoqth status'),
               Key("designId",
                   Long(name="mask", reprFmt="0x%016x",
                        FITS=('W_PFDSGN', 'PFS_DESIGN_ID'))),
               Key("fiberConfig", String(help='fiber bundle configuration')),

               )
