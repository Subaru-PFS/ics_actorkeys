# from opscore.protocols.keys import KeysDictionary
# from opscore.protocols.types import Key, String, Float, Int

KeysDictionary('gen2', (3, 0),
               Key("text", String(help="text for humans")),
               Key("version", String(help="Gen2 actor version",
                                     FITS=('W_RVG2AC',
                                           'W_GEN2ACTOR_VERSION'))),
               Key("version_gen2", String(help="Gen2 library version",
                                          FITS=('W_RVG2LB',
                                                'W_GEN2_LIBRARY_VERSION'))),
               Key('version_tron_actorcore', String()),
               Key('version_pfs_utils', String()),
               Key('gen2server',
                   String(name='name', help="Internal name of Gen2 server used by PFS",
                          FITS=("W_G2SERV",
                                "W_GEN2_SERVER_NAME")),
                   String(name='IP', help="IP address of Gen2 server used by PFS",
                          FITS=("W_G2SVIP",
                                "W_GEN2_SERVER_IP"))),
               
               Key("visit", Int(help="Gen2-assigned PFS visit")),
               
               Key("tel_focus",
                   String(name='telpos', help="Focus where inst. is attached",
                          FITS=('TELFOCUS', '')),
                   String(name="platform", help="Focus where instrument is attached.",
                          FITS=("FOC-POS", "")),
                   Float(name='val', units='um', help="Focus encoder value",
                         FITS=('FOC_VAL', ''))),
               Key("tel_axes",
                   Float(name='az', units='deg', help="Azimuth position",
                         FITS=('AZIMUTH', '')),
                   Float(name='alt', units='deg', help="Altitude position",
                         FITS=('ALTITUDE', '')),
                   Float(name="zd", units="deg", help="Zenith Distance",
                         FITS=("ZD", "")),
                   Float("airmass", help="Typical airmass during exposure",
                         FITS=("AIRMASS", ""))),
               Key("tel_rot",
                   Float(name='posAngle', units='deg', help="Inst pos angle at flange",
                         FITS=('INST-PA', '')),
                   Float(name='instrot', units='deg', help="Inst rotation angle",
                         FITS=('INSROT', ''))),
               Key("tel_adc",
                   String(name='name', help="ADC name",
                          FITS=('ADC-TYP', '')),
                   Float(name='angle', units='deg', help="ADC pos angle",
                         FITS=('ADC-STR', ''))),
               Key("dome_env",
                   Float(name='humidity', units='%', help="Dome humidity",
                         FITS=('DOM-HUM', '')),
                   Float(name='pressure', units='hPa', help="Dome pressure",
                         FITS=('DOM-PRS', '')),
                   Float(name='temperature', units='K', help="Dome temperature",
                         FITS=('DOM-TMP', '')),
                   Float(name='wind', units='m/s', help="Dome wind speed",
                         FITS=('DOM-WND', ''))),
               Key("outside_env",
                   Float(name='humidity', units='%', help="Outside humidity",
                         FITS=('OUT-HUM', '')),
                   Float(name='pressure', units='hPa', help="Outside pressure",
                         FITS=('OUT-PRS', '')),
                   Float(name='temperature', units='K', help="Outside temperature",
                         FITS=('OUT-TMP', '')),
                   Float(name='wind', units='m/s', help="Outside wind speed",
                         FITS=('OUT-WND', ''))),
               
               Key("frame_ids",
                   String("imageId", help="Image ID",
                          FITS=("FRAMEID", "")),
                   String("expId", help="Exposure/visit ID",
                          FITS=("EXP-ID", ""))),
               
               Key("inst_ids",
                   String("observatory", help="Observatory",
                          FITS=("OBSERVAT", "")),
                   String("telescope", help="Telescope",
                          FITS=("TELESCOP", "")),
                   String("instrument", help="Instrument name",
                          FITS=("INSTRUME", ""))),
               
               Key("coordinate_system_ids",
                   String("radesys", help="The equatorial coordinate system",
                          FITS=("RADESYS", "")),
                   Float("pole", units='deg', help="North Pole of the coordinate system",
                         FITS=("LONPOLE", "")),
                   Float("equinox", units='year', help="Standard FK5",
                         FITS=("EQUINOX", ""))),
               
               Key("program",
                   String("proposal", help="Proposal ID",
                          FITS=("PROP-ID", "")),
                   String("mode", help="Observation Mode",
                          FITS=("OBS-MOD", "")),
                   String("allocation", help="Observation or Standby",
                          FITS=("OBS-ALOC", "")),
                   String("observers", help="Observers",
                          FITS=("OBSERVER", ""))),
               
               Key("object",
                   String("name",
                          FITS=("OBJECT", ""),
                          help="Object name"),
                   String("ra",
                          FITS=("RA", ""),
                          help="RA of telescope pointing",
                          units='HMS'),
                   String("dec",
                          FITS=("DEC", ""),
                          help="DEC of telescope pointing",
                          units='DMS'),
                   String("ra2000",
                          FITS=("RA2000", ""),
                          help="RA of telescope pointing",
                          units='HMS'),
                   String("dec2000",
                          FITS=("DEC2000", ""),
                          help="DEC of telescope pointing",
                          units='DMS')),
               
               Key("m2",
                   String("type",
                          FITS=("M2-TYPE", ""),
                          help="M2 type"),
                   Float("xpos",
                         FITS=("M2-POS1", ""),
                         help="M2 X position",
                         units='mm'),
                   Float("ypos",
                         FITS=("M2-POS2", ""),
                         help="M2 Y position",
                         units='mm'),
                   Float("zpos",
                         FITS=("M2-POS3", ""),
                         help="M2 Z position",
                         units='mm'),
                   Float("xang",
                         FITS=("M2-ANG1", ""),
                         help="M2 X angle",
                         units='deg'),
                   Float("yang",
                         FITS=("M2-ANG2", ""),
                         help="M2 Y angle",
                         units='deg'),
                   Float("zang",
                         FITS=("M2-ANG3", ""),
                         help="M2 Z angle",
                         units='deg'),
                   Float("xoff",
                         FITS=("W_M2OFF1", "W_GEN2_M2_XOFFSET"),
                         help="M2 X offset",
                         units='mm'),
                   Float("yoff",
                         FITS=("W_M2OFF2", "W_GEN2_M2_YOFFSET"),
                         help="M2 Y offset",
                         units='mm'),
                   Float("zoff",
                         FITS=("W_M2OFF3", "W_GEN2_M2_ZOFFSET"),
                         help="M2 Z offset",
                         units='mm')),
               
               Key("adc",
                   String("type",
                          FITS=("ADC-TYP", ""),
                          help="ADC name, if used"),
                   Float("value",
                         FITS=("ADC-STR", ""),
                         help="ADC PA at exposure start",
                         units='deg')),
               
               Key("conditions",
                   String("weather",
                          FITS=("WEATHER", ""),
                          help="Weather conditions, per observer"),
                   Float("seeing",
                         FITS=("SEEING", ""),
                         help="FWHM of star at telescope focus",
                         units='arcsec'),
                   Float("transparency",
                         FITS=("TRANSP", ""),
                         help="Sky transparency",
                         units='frac')),
               
               Key("autoguider",
                   String("state",
                          FITS=("AUTOGUID", ""),
                          help="State of autoguider")),
               
               Key("header", String(help="Gen2-supplied FITS header")),
)
